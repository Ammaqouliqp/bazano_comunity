from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CommandHandler, CallbackQueryHandler

async def manager_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("ðŸ“¦ Ù…Ø¯ÛŒØ±ÛŒØª Ù…Ø­ØµÙˆÙ„Ø§Øª", callback_data="manager_products")],
        [InlineKeyboardButton("ðŸ“Š Ú¯Ø²Ø§Ø±Ø´â€ŒÙ‡Ø§", callback_data="manager_reports")],
        [InlineKeyboardButton("ðŸ›’ Ù…Ù†ÙˆÛŒ Ø®Ø±ÛŒØ¯Ø§Ø±", callback_data="go_buyer")],
        [InlineKeyboardButton("ðŸ”™ Ø¨Ø§Ø²Ú¯Ø´Øª", callback_data="back_main")]
    ]
    if update.message:
        await update.message.reply_text("ðŸ“‹ Ù…Ù†ÙˆÛŒ Ù…Ø¯ÛŒØ±:", reply_markup=InlineKeyboardMarkup(keyboard))
    else:
        await update.callback_query.edit_message_text("ðŸ“‹ Ù…Ù†ÙˆÛŒ Ù…Ø¯ÛŒØ±:", reply_markup=InlineKeyboardMarkup(keyboard))

async def manager_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    q = update.callback_query
    await q.answer()
    if q.data == "manager_products":
        await q.edit_message_text("âš™ Ø¨Ø®Ø´ Ù…Ø¯ÛŒØ±ÛŒØª Ù…Ø­ØµÙˆÙ„Ø§Øª...")
    elif q.data == "manager_reports":
        await q.edit_message_text("ðŸ“Š Ú¯Ø²Ø§Ø±Ø´â€ŒÙ‡Ø§...")
    elif q.data == "go_buyer":
        from buyer import buyer_menu
        await buyer_menu(update, context)
    elif q.data == "back_main":
        await q.edit_message_text("ðŸ”™ Ø¨Ø±Ú¯Ø´ØªÛŒ Ø¨Ù‡ Ù…Ù†ÙˆÛŒ Ø§ØµÙ„ÛŒ...")

def get_manager_handlers():
    return [
        CommandHandler("manager", manager_menu),
        CallbackQueryHandler(manager_callback, pattern="^manager_"),
        CallbackQueryHandler(manager_callback, pattern="^go_buyer$"),
        CallbackQueryHandler(manager_callback, pattern="^back_main$"),
    ]
